{"version":3,"file":"static/js/669.4b464c5e.chunk.js","mappings":"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","sources":["../../node_modules/@capacitor/device/src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  BatteryInfo,\n  DeviceId,\n  DeviceInfo,\n  DevicePlugin,\n  GetLanguageCodeResult,\n  LanguageTag,\n} from './definitions';\n\ndeclare global {\n  interface Navigator {\n    getBattery: any;\n    oscpu: any;\n  }\n\n  interface Window {\n    InstallTrigger?: any;\n    ApplePaySession?: any;\n    chrome?: any;\n  }\n}\n\nexport class DeviceWeb extends WebPlugin implements DevicePlugin {\n  async getId(): Promise<DeviceId> {\n    return {\n      uuid: this.getUid(),\n    };\n  }\n\n  async getInfo(): Promise<DeviceInfo> {\n    if (typeof navigator === 'undefined' || !navigator.userAgent) {\n      throw this.unavailable('Device API not available in this browser');\n    }\n\n    const ua = navigator.userAgent;\n    const uaFields = this.parseUa(ua);\n\n    return {\n      model: uaFields.model,\n      platform: <const>'web',\n      operatingSystem: uaFields.operatingSystem,\n      osVersion: uaFields.osVersion,\n      manufacturer: navigator.vendor,\n      isVirtual: false,\n      webViewVersion: uaFields.browserVersion,\n    };\n  }\n\n  async getBatteryInfo(): Promise<BatteryInfo> {\n    if (typeof navigator === 'undefined' || !navigator.getBattery) {\n      throw this.unavailable('Device API not available in this browser');\n    }\n    let battery: any = {};\n\n    try {\n      battery = await navigator.getBattery();\n    } catch (e) {\n      // Let it fail, we don't care\n    }\n\n    return {\n      batteryLevel: battery.level,\n      isCharging: battery.charging,\n    };\n  }\n\n  async getLanguageCode(): Promise<GetLanguageCodeResult> {\n    return {\n      value: navigator.language.split('-')[0].toLowerCase(),\n    };\n  }\n\n  async getLanguageTag(): Promise<LanguageTag> {\n    return {\n      value: navigator.language,\n    };\n  }\n\n  parseUa(ua: string): any {\n    const uaFields: any = {};\n    const start = ua.indexOf('(') + 1;\n    let end = ua.indexOf(') AppleWebKit');\n    if (ua.indexOf(') Gecko') !== -1) {\n      end = ua.indexOf(') Gecko');\n    }\n    const fields = ua.substring(start, end);\n    if (ua.indexOf('Android') !== -1) {\n      const tmpFields = fields.replace('; wv', '').split('; ').pop();\n      if (tmpFields) {\n        uaFields.model = tmpFields.split(' Build')[0];\n      }\n      uaFields.osVersion = fields.split('; ')[1];\n    } else {\n      uaFields.model = fields.split('; ')[0];\n      if (typeof navigator !== 'undefined' && navigator.oscpu) {\n        uaFields.osVersion = navigator.oscpu;\n      } else {\n        if (ua.indexOf('Windows') !== -1) {\n          uaFields.osVersion = fields;\n        } else {\n          const tmpFields = fields.split('; ').pop();\n          if (tmpFields) {\n            const lastParts = tmpFields\n              .replace(' like Mac OS X', '')\n              .split(' ');\n            uaFields.osVersion = lastParts[lastParts.length - 1].replace(\n              /_/g,\n              '.',\n            );\n          }\n        }\n      }\n    }\n\n    if (/android/i.test(ua)) {\n      uaFields.operatingSystem = 'android';\n    } else if (/iPad|iPhone|iPod/.test(ua) && !window.MSStream) {\n      uaFields.operatingSystem = 'ios';\n    } else if (/Win/.test(ua)) {\n      uaFields.operatingSystem = 'windows';\n    } else if (/Mac/i.test(ua)) {\n      uaFields.operatingSystem = 'mac';\n    } else {\n      uaFields.operatingSystem = 'unknown';\n    }\n\n    // Check for browsers based on non-standard javascript apis, only not user agent\n    const isFirefox = !!window.InstallTrigger;\n    const isSafari = !!window.ApplePaySession;\n    const isChrome = !!window.chrome;\n    const isEdge = /Edg/.test(ua);\n    const isFirefoxIOS = /FxiOS/.test(ua);\n    const isChromeIOS = /CriOS/.test(ua);\n    const isEdgeIOS = /EdgiOS/.test(ua);\n\n    // FF and Edge User Agents both end with \"/MAJOR.MINOR\"\n    if (\n      isSafari ||\n      (isChrome && !isEdge) ||\n      isFirefoxIOS ||\n      isChromeIOS ||\n      isEdgeIOS\n    ) {\n      // Safari version comes as     \"... Version/MAJOR.MINOR ...\"\n      // Chrome version comes as     \"... Chrome/MAJOR.MINOR ...\"\n      // FirefoxIOS version comes as \"... FxiOS/MAJOR.MINOR ...\"\n      // ChromeIOS version comes as  \"... CriOS/MAJOR.MINOR ...\"\n      let searchWord: string;\n      if (isFirefoxIOS) {\n        searchWord = 'FxiOS';\n      } else if (isChromeIOS) {\n        searchWord = 'CriOS';\n      } else if (isEdgeIOS) {\n        searchWord = 'EdgiOS';\n      } else if (isSafari) {\n        searchWord = 'Version';\n      } else {\n        searchWord = 'Chrome';\n      }\n\n      const words = ua.split(' ');\n      for (const word of words) {\n        if (word.includes(searchWord)) {\n          const version = word.split('/')[1];\n          uaFields.browserVersion = version;\n        }\n      }\n    } else if (isFirefox || isEdge) {\n      const reverseUA = ua.split('').reverse().join('');\n      const reverseVersion = reverseUA.split('/')[0];\n      const version = reverseVersion.split('').reverse().join('');\n      uaFields.browserVersion = version;\n    }\n\n    return uaFields;\n  }\n\n  getUid(): string {\n    if (typeof window !== 'undefined' && window.localStorage) {\n      let uid = window.localStorage.getItem('_capuid');\n      if (uid) {\n        return uid;\n      }\n\n      uid = this.uuid4();\n      window.localStorage.setItem('_capuid', uid);\n      return uid;\n    }\n    return this.uuid4();\n  }\n\n  uuid4(): string {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n      /[xy]/g,\n      function (c) {\n        const r = (Math.random() * 16) | 0,\n          v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      },\n    );\n  }\n}\n"],"names":["DeviceWeb","uuid","this","getUid","navigator","userAgent","unavailable","ua","uaFields","parseUa","model","platform","operatingSystem","osVersion","manufacturer","vendor","isVirtual","webViewVersion","browserVersion","getBattery","battery","batteryLevel","level","isCharging","charging","value","language","split","toLowerCase","start","indexOf","end","fields","substring","tmpFields","replace","pop","oscpu","lastParts","length","test","window","MSStream","isFirefox","InstallTrigger","isSafari","ApplePaySession","isChrome","chrome","isEdge","isFirefoxIOS","isChromeIOS","isEdgeIOS","searchWord","words","word","includes","version","reverse","join","localStorage","uid","getItem","uuid4","setItem","c","r","Math","random","toString","WebPlugin"],"sourceRoot":""}